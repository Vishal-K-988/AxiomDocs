"""Add PDF processing fields

Revision ID: 0e3307826cc1
Revises: 
Create Date: 2025-05-23 13:15:51.355673

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '0e3307826cc1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_folders_id'), table_name='folders')
    op.drop_index(op.f('ix_folders_name'), table_name='folders')
    op.drop_index(op.f('ix_folders_user_id'), table_name='folders')
    op.drop_table('folders')
    op.drop_index(op.f('ix_conversations_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_user_id'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_document_embeddings_id'), table_name='document_embeddings')
    op.drop_table('document_embeddings')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.add_column('files', sa.Column('is_pdf', sa.Boolean(), nullable=True))
    op.add_column('files', sa.Column('pdf_text', sa.Text(), nullable=True))
    op.add_column('files', sa.Column('pdf_metadata', sa.Text(), nullable=True))
    op.add_column('files', sa.Column('pdf_page_count', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('files', 'pdf_page_count')
    op.drop_column('files', 'pdf_metadata')
    op.drop_column('files', 'pdf_text')
    op.drop_column('files', 'is_pdf')
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('conversation_id', sa.INTEGER(), nullable=True),
    sa.Column('role', sa.VARCHAR(), nullable=True),
    sa.Column('content', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_table('document_embeddings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('file_id', sa.INTEGER(), nullable=True),
    sa.Column('chunk_text', sa.TEXT(), nullable=True),
    sa.Column('embedding', sqlite.JSON(), nullable=True),
    sa.Column('chunk_index', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_embeddings_id'), 'document_embeddings', ['id'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=True),
    sa.Column('file_id', sa.INTEGER(), nullable=True),
    sa.Column('title', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_user_id'), 'conversations', ['user_id'], unique=False)
    op.create_index(op.f('ix_conversations_id'), 'conversations', ['id'], unique=False)
    op.create_table('folders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('user_id', sa.VARCHAR(), nullable=True),
    sa.Column('parent_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['folders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_folders_user_id'), 'folders', ['user_id'], unique=False)
    op.create_index(op.f('ix_folders_name'), 'folders', ['name'], unique=False)
    op.create_index(op.f('ix_folders_id'), 'folders', ['id'], unique=False)
    # ### end Alembic commands ###
